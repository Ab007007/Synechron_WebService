<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="14" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="14927" started-at="2021-05-27T10:53:05Z" finished-at="2021-05-27T10:53:20Z">
    <groups>
    </groups>
    <test name="Trello" duration-ms="12679" started-at="2021-05-27T10:53:05Z" finished-at="2021-05-27T10:53:18Z">
      <class name="com.synechron.ws.wstraining.basics.get.GetTrelloBoard">
        <test-method status="PASS" signature="validateGetBoardInBDDStyle()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetTrelloBoard@1e127982]" name="validateGetBoardInBDDStyle" duration-ms="477" started-at="2021-05-27T10:53:16Z" finished-at="2021-05-27T10:53:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetBoardInBDDStyle -->
        <test-method status="PASS" signature="validateGetBoardInBDDStyleSimplified()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetTrelloBoard@1e127982]" name="validateGetBoardInBDDStyleSimplified" duration-ms="491" started-at="2021-05-27T10:53:16Z" finished-at="2021-05-27T10:53:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetBoardInBDDStyleSimplified -->
        <test-method status="PASS" signature="validateGetBoardInExpectFormat()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetTrelloBoard@1e127982]" name="validateGetBoardInExpectFormat" duration-ms="513" started-at="2021-05-27T10:53:17Z" finished-at="2021-05-27T10:53:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetBoardInExpectFormat -->
        <test-method status="PASS" signature="validateGetBoardInRestFormat()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetTrelloBoard@1e127982]" name="validateGetBoardInRestFormat" duration-ms="488" started-at="2021-05-27T10:53:17Z" finished-at="2021-05-27T10:53:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGetBoardInRestFormat -->
      </class> <!-- com.synechron.ws.wstraining.basics.get.GetTrelloBoard -->
      <class name="com.synechron.ws.wstraining.basics.get.GetBoardWithValidation">
        <test-method status="PASS" signature="getGeport()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="getGeport" is-config="true" duration-ms="186" started-at="2021-05-27T10:53:05Z" finished-at="2021-05-27T10:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGeport -->
        <test-method status="PASS" signature="multipleAssertions()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="multipleAssertions" duration-ms="5214" started-at="2021-05-27T10:53:05Z" finished-at="2021-05-27T10:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleAssertions -->
        <test-method status="PASS" signature="printAllArrayElements()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="printAllArrayElements" duration-ms="731" started-at="2021-05-27T10:53:10Z" finished-at="2021-05-27T10:53:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printAllArrayElements -->
        <test-method status="PASS" signature="validateBodyInGet()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="validateBodyInGet" duration-ms="539" started-at="2021-05-27T10:53:11Z" finished-at="2021-05-27T10:53:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBodyInGet -->
        <test-method status="PASS" signature="validateKeyExist()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="validateKeyExist" duration-ms="1287" started-at="2021-05-27T10:53:12Z" finished-at="2021-05-27T10:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateKeyExist -->
        <test-method status="PASS" signature="validateMultipleValuesInArray()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="validateMultipleValuesInArray" duration-ms="549" started-at="2021-05-27T10:53:13Z" finished-at="2021-05-27T10:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateMultipleValuesInArray -->
        <test-method status="PASS" signature="validateResponseHeaderInGet()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="validateResponseHeaderInGet" duration-ms="547" started-at="2021-05-27T10:53:13Z" finished-at="2021-05-27T10:53:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseHeaderInGet -->
        <test-method status="PASS" signature="validateResponseInArray()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="validateResponseInArray" duration-ms="547" started-at="2021-05-27T10:53:14Z" finished-at="2021-05-27T10:53:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseInArray -->
        <test-method status="PASS" signature="verifyPerticularValue()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="verifyPerticularValue" duration-ms="643" started-at="2021-05-27T10:53:15Z" finished-at="2021-05-27T10:53:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPerticularValue -->
        <test-method status="PASS" signature="saveReports()[pri:0, instance:com.synechron.ws.wstraining.basics.get.GetBoardWithValidation@617faa95]" name="saveReports" is-config="true" duration-ms="415" started-at="2021-05-27T10:53:15Z" finished-at="2021-05-27T10:53:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveReports -->
      </class> <!-- com.synechron.ws.wstraining.basics.get.GetBoardWithValidation -->
    </test> <!-- Trello -->
    <test name="GIT" duration-ms="624" started-at="2021-05-27T10:53:18Z" finished-at="2021-05-27T10:53:18Z">
      <class name="com.synechron.ws.wstraining.basics.post.CreateRepository">
        <test-method status="FAIL" signature="validateCreateRepository()[pri:0, instance:com.synechron.ws.wstraining.basics.post.CreateRepository@67784306]" name="validateCreateRepository" duration-ms="615" started-at="2021-05-27T10:53:18Z" finished-at="2021-05-27T10:53:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <401>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.synechron.ws.wstraining.basics.post.CreateRepository.validateCreateRepository(CreateRepository.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateRepository -->
      </class> <!-- com.synechron.ws.wstraining.basics.post.CreateRepository -->
    </test> <!-- GIT -->
    <test name="PayPal" duration-ms="1556" started-at="2021-05-27T10:53:18Z" finished-at="2021-05-27T10:53:20Z">
      <class name="com.synechron.ws.wstraining.basics.auth.CreatePayment">
        <test-method status="PASS" signature="getTokenTest()[pri:0, instance:com.synechron.ws.wstraining.basics.auth.CreatePayment@4b4523f8]" name="getTokenTest" is-config="true" duration-ms="614" started-at="2021-05-27T10:53:18Z" finished-at="2021-05-27T10:53:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTokenTest -->
        <test-method status="PASS" signature="createPayment()[pri:0, instance:com.synechron.ws.wstraining.basics.auth.CreatePayment@4b4523f8]" name="createPayment" duration-ms="939" started-at="2021-05-27T10:53:19Z" finished-at="2021-05-27T10:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPayment -->
      </class> <!-- com.synechron.ws.wstraining.basics.auth.CreatePayment -->
    </test> <!-- PayPal -->
  </suite> <!-- Default suite -->
</testng-results>
